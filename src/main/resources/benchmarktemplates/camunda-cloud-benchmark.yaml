apiVersion: apps/v1
kind: Deployment
metadata:
  name: camunda-cloud-benchmark
  labels:
    app: camunda-cloud-benchmark
spec:
  selector:
    matchLabels:
      app: camunda-cloud-benchmark
  replicas: ${loadGeneratorStarter.starterReplicas}
  template:
    metadata:
      labels:
        app: camunda-cloud-benchmark
    spec:
      containers:
      - name: camunda-cloud-benchmark
        image: berndruecker/camunda-cloud-benchmark:main
        imagePullPolicy: Always
        env:
          - name: JAVA_OPTIONS
            value: >-
              -Dzeebe.client.broker.gateway-address=falko-***REMOVED***-zeebe-gateway:26500
              -Dzeebe.client.security.plaintext=true
              -Dbenchmark.startPiPerSecond=${loadGeneratorStarter.startThroughput}
              -Dbenchmark.maxBackpressurePercentage=${loadGeneratorStarter.maxBackPressure}
              -Dbenchmark.taskCompletionDelay=${jobWorker.jobDuration}
              -Dbenchmark.bpmnProcessId=${loadGeneratorStarter.processModel}
              -Dbenchmark.bpmnResource=process.bpmn
              -Dbenchmark.jobType=benchmark-task
              -Dbenchmark.payloadPath=bpmn/typical_payload.json
              -Dbenchmark.autoDeployProcess=true
        resources:
          limits:
            cpu: ${engine.vcpus}
            memory: ${engine.ram}Gi
          requests:
            cpu: 1
            memory: 1Gi
        volumeMounts:
        - name: config
          mountPath: /process.bpmn
          subPath: ${loadGeneratorStarter.processModel}.bpmn
      volumes:
      - name: config
        configMap:
          name: process-cfgmap
          defaultMode: 0744
